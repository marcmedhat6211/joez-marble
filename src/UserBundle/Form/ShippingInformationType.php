<?php

namespace App\UserBundle\Form;

use App\ServiceBundle\Utils\Validate;
use App\UserBundle\Entity\ShippingInformation;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\TelType;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\Form\FormError;
use Symfony\Component\Form\FormEvent;
use Symfony\Component\Form\FormEvents;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Validator\Constraints\NotBlank;
use Symfony\Contracts\Translation\TranslatorInterface;

class ShippingInformationType extends AbstractType
{
    private TranslatorInterface $translator;

    public function __construct(TranslatorInterface $translator)
    {
        $this->translator = $translator;
    }

    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $builder
            ->add('companyName', TextType::class, [
                "required" => false,
                "attr" => [
                    "class" => "form-control",
                    "placeholder" => "Company Name",
                ]
            ])
            ->add('firstName', TextType::class, [
                "required" => true,
                "attr" => [
                    "class" => "form-control",
                    "placeholder" => "First Name",
                ],
                "constraints" => [
                    new NotBlank()
                ]
            ])
            ->add('lastName', TextType::class, [
                "required" => true,
                "attr" => [
                    "class" => "form-control",
                    "placeholder" => "Last Name",
                ],
                "constraints" => [
                    new NotBlank()
                ]
            ])
            ->add('phone', TelType::class, [
                "required" => true,
                "attr" => [
                    "class" => "form-control",
                    "placeholder" => "Phone Number",
                ],
                "constraints" => [
                    new NotBlank()
                ]
            ])
            ->add('address', TextType::class, [
                "required" => true,
                "attr" => [
                    "class" => "form-control",
                    "placeholder" => "Address",
                ],
                "constraints" => [
                    new NotBlank()
                ]
            ])
            ->add('district', TextType::class, [
                "required" => true,
                "attr" => [
                    "class" => "form-control",
                    "placeholder" => "District",
                ],
                "constraints" => [
                    new NotBlank()
                ]
            ])
            ->add('addressName', TextType::class, [
                "required" => true,
                "attr" => [
                    "class" => "form-control",
                    "placeholder" => "Address Name (for future reference)",
                    "name" => "address-name",
                ],
                "constraints" => [
                    new NotBlank()
                ]
            ]);

        $builder->addEventListener(FormEvents::SUBMIT, [$this, 'onSubmit']);
    }

    public function onSubmit(FormEvent $event): void
    {
        $form = $event->getForm();
        $phone = $form->get("phone")->getData();
        $errorMessage = $this->translator->trans("add_valid_phone_number_msg");

        if (!Validate::isPhoneNumber($phone)) {
            $form->get("phone")
                ->addError(new FormError($errorMessage));
        }
    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults([
            'data_class' => ShippingInformation::class,
            'validation_groups' => ["Default"],
        ]);
    }

    public function getBlockPrefix()
    {
        return parent::getBlockPrefix(); // TODO: Change the autogenerated stub
    }
}
